package database.itemsTable;
import java.util.ArrayList;

public class Main {
	public static void main(String[] args) {
		String setData = "P2&W2";
		System.out.println("セットされた[" + setData +"]に該当するアイテムを表示します");
		
		ArrayList<Item> items = ItemDAO.findSetData(setData);
		for(Item item : items) {
			System.out.printf("%10s%4d%4d\n", item.getName(), item.getPrice(), item.getWeight());
		}
	}
}

//------------------------------------------------------------------------------------------
package database.itemsTable;

public class Item {
	private String name;
	private int price;
	private int weight;
	
	public String getName() {return this.name;}
	public int getPrice() {return this.price;}
	public int getWeight() {return weight;}
	
	public void setName(String name) {this.name = name;}
	public void setPrice(int price) {this.price = price;}
	public void setWeight(int weight) {this.weight = weight;}
}

//------------------------------------------------------------------------------------------
package database.itemsTable;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

public class ItemDAO{
	static final String URL = "jdbc:mysql://localhost:3306/basic?characterEncoding=UTF-8&useSSL=false &serverTimezone=GMT%2B9";
	static final String USERNAME = "root";
	static final String PASSWORD = "rootroot";
	static Connection con = null;
	
	public static ArrayList<Item> findSetData(String setData){
		try {
			String selectQuery = "SELECT * FROM ITEMS WHERE";
			String[][] storedQuery = {{" =5", " =7"},
					 					{" =2", " =2"}};
			String generateSQL = "";
			String[] splitData = setData.split("&");
			
			for(int i = 0; i < splitData.length; i++) {
				switch(splitData[i].substring(0,1)) {
					case "P": generateSQL = generateSQL + " PRICE";
						switch(splitData[i].substring(1,2)) {
							case "1": generateSQL = generateSQL.concat(storedQuery[0][0]); break;
							case "2": generateSQL = generateSQL.concat(storedQuery[0][1]); break;
						}
						break;
					
					case "W": generateSQL = generateSQL + " WEIGHT";
						switch(splitData[i].substring(1,2)) {
							case "1": generateSQL = generateSQL.concat(storedQuery[1][0]); break;
							case "2": generateSQL = generateSQL.concat(storedQuery[1][1]); break;
						}
						break;
				}
				if(i + 1 != splitData.length) generateSQL = generateSQL + " &&";
				else generateSQL = generateSQL + ";";
			}
			generateSQL = selectQuery.concat(generateSQL);
			
			Connection con = DriverManager.getConnection(URL, USERNAME, PASSWORD);
			PreparedStatement pstmt = con.prepareStatement(generateSQL);
			//pstmt = pstmt + generateSQL.toString();
			ResultSet rs = pstmt.executeQuery();

			ArrayList<Item> items = new ArrayList<Item>();
			while(rs.next()) {
				Item item = new Item();
				item.setName(rs.getString("NAME"));
				item.setPrice(rs.getInt("PRICE"));
				item.setWeight(rs.getInt("WEIGHT"));
				items.add(item);
			}
			rs.close();
			pstmt.close();
			return items;
		}catch(SQLException e){
			e.printStackTrace();
		}finally {
			if(con != null) {
				try {
					con.close();
				}catch(SQLException e){
					e.printStackTrace();
				}
			}
		}
		return null;
	}
}



